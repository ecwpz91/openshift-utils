# file: roles/wetty/tasks/main.yml
---

- name: install required packages
  become: yes
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - make
    - nmap-ncat
    - npm
    - gcc-c++

- name: install wetty globaly
  become: yes
  command: npm install wetty -g chdir=/home/{{ system_user }}
  args:
    creates: /usr/lib/node_modules/wetty/bin/wetty.js

#-------------------------------------------------------
# Let's Encrypt.
#-------------------------------------------------------
- name: copy cert.pem to wetty directory
  become: yes
  command: cp cert.pem /home/{{ system_user }}/.ssh/ chdir="/etc/letsencrypt/live/{{ workshop_prefix | lower }}.{{ hostvars[inventory_hostname]['ec2_tag_Index'] }}.{{ domain_name }}/"
  args:
    creates: /home/{{ system_user }}/.ssh/cert.pem
  when: letsencrypt

- name: copy privkey.pem to Wetty dir
  become: yes
  command: cp privkey.pem /home/{{ system_user }}/.ssh/ chdir="/etc/letsencrypt/live/{{ workshop_prefix | lower }}.{{ hostvars[inventory_hostname]['ec2_tag_Index'] }}.{{ domain_name }}/"
  args:
    creates: /home/{{ system_user }}/.ssh/privkey.pem
  when: letsencrypt

#-------------------------------------------------------
# Self-Signed Certs
#-------------------------------------------------------
- name: generate self signed certs
  command: >
    openssl req -new
      -x509
      -nodes
      -days {{ item.days | default(3650) }}
      -subj "/C={{ item.country | default('') }}/ST={{ item.state | default('') }}/L={{ item.city | default('') }}/O={{ item.organization | default('') }}/OU={{ item.unit | default('') }}/CN={{ item.name }}/emailAddress={{ item.email | default('') }}"
      -newkey rsa:2048
      -keyout /home/{{ system_user }}/.ssh/privkey.pem
      -out /home/{{ system_user }}/.ssh/cert.pem
  args:
    creates: /home/{{ system_user }}/.ssh/*.pem
  with_items: "{{ openssl_self_signed }}"
  when: not letsencrypt

- name: set permissions on ssl certs
  become: yes
  file:
    path:    "/home/{{ system_user }}/.ssh/{{ item }}"
    group:   "{{ system_user }}"
    owner:   "{{ system_user }}"
    mode:    0400
  with_items:
    - cert.pem
    - privkey.pem

# SYSTEMD
- name: template systemd service file for wetty
  become: yes
  template:
    src:   "wetty.service.j2"
    dest:  "/etc/systemd/system/wetty.service"
    group: root
    owner: root
    mode:  0644
  notify: wetty

# password_hash requires the passlib python module to generate password hashes
# pip install passlib
- name: Set ec2-user password
  become: yes
  user:
    name:      "ec2-user"
    password:  "{{ workshop_password |password_hash('sha512') }}"
    state:     present
    append:    yes

- name: update ssh config
  become: yes
  copy:
    src: sshd_config
    dest: "/etc/ssh/sshd_config"
    group: root
    owner: root
    mode: 0644
  notify:
    - sshd

- name: check to see if firewalld is installed
  become: yes
  command: rpm -q firewalld
  register: rf_result
  ignore_errors: True

# - name: Open port in Firewall
#   become: yes
#   firewalld:
#     port: 8888/tcp  #"{{ wetty_port }}"
#     permanent: true
#     state: enabled
#  when: rf_result.rc == 0

- name: turn off Firewall
  become: yes
  systemd:
    name: firewalld
    enabled: no
    state: stopped
  when: rf_result.rc == 0

- name: check to see if iptables is running
  become: yes
  command: service iptables status
  register: ri_result
  ignore_errors: True
  when: rf_result.rc != 0

- name: open port in iptables firewall
  become: yes
  iptables:
    action: append
    chain: OS_FIREWALL_ALLOW
    destination_port: 8888
    jump: ACCEPT
    protocol: tcp
    state: present
  when:
  - rf_result.rc != 0
  - ri_result.rc == 0

- name: append iptables rule to config file
  lineinfile:
    path: /etc/sysconfig/iptables
    insertbefore: "^COMMIT$"
    line: "-A OS_FIREWALL_ALLOW -p tcp -m state --state NEW -m udp --dport 8888 -j ACCEPT"
    state: present

- name: create selinux directory
  become: yes
  file:
    group: "{{ system_user }}"
    owner: "{{ system_user }}"
    mode:  0700
    path:  "/home/{{ system_user }}/.selinux"
    state: directory

- name: copy over selinux modules for wetty
  become: yes
  copy:
    src:   "{{ item }}"
    dest:  "/home/{{ system_user }}/.selinux"
    group: "{{system_user}}"
    owner: "{{system_user}}"
    mode:  0700
  with_items:
    - wetty.pp
    - wetty.te
  register: result

- name: update selinux for wetty
  become: yes
  command: semodule -i wetty.pp chdir=/home/{{ system_user }}/.selinux
  notify: wetty
  when: result.changed

- name: enable and start wetty service
  become: yes
  service:
    name: wetty
    enabled: yes
    state: started

###########################################################
#   Build from Source
###########################################################
# - name: Clone wetty
#   git:
#     clone: yes
#     force: yes
#     dest:  "/home/{{ system_user }}/.wetty"
#     repo:  "https://github.com/krishnasrinivas/wetty"
#
# - name: Set permissions on repo
#   become: yes
#   file:
#     recurse: yes
#     path:    "/home/{{ system_user }}/.wetty"
#     group:   "{{ system_user }}"
#     owner:   "{{ system_user }}"
#     mode:    0700
#
# - name: Install wetty
#   command: npm install chdir="/home/{{ system_user }}/.wetty"

#-------------------------------------------------------
# verify that wetty is running
#-------------------------------------------------------
- name: verify that wetty is listening
  shell: ncat -v -C --ssl localhost 8888 < /dev/null
  register: wetty_status
  changed_when: "wetty_status.rc != 0"
